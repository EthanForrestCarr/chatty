generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  username         String            @unique
  password         String
  emailVerified    DateTime?
  sessions         Session[]
  accounts         Account[]
  messages         Message[]
  chatUsers        ChatUser[]
  messageReactions MessageReaction[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Chat {
  id        String     @id @default(cuid())
  messages  Message[]
  createdAt DateTime   @default(now())
  chatUsers ChatUser[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  senderId  String
  chatId    String
  createdAt DateTime @default(now())
  editedAt  DateTime?

  sender    User              @relation(fields: [senderId], references: [id])
  chat      Chat              @relation(fields: [chatId], references: [id])
  reactions MessageReaction[]
}

model MessageReaction {
  id        String   @id @default(cuid())
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  emoji     String
  createdAt DateTime @default(now())

  @@unique([messageId, userId, emoji])
}

model ChatUser {
  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  lastReadAt DateTime?

  @@id([chatId, userId])
}
